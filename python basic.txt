1.What is Python, and why is it popular

 Python is a high-level, interpreted programming language known for its simplicity, readability, and versatility.

It‚Äôs popular because:
Easy to learn and write (clean, readable syntax)
Works for many fields (web, data science, AI, automation, etc.)

2.What is an interpreter in Python?
.An interpreter is the program that reads and executes Python code line by line instead of compiling it into machine code first this make it easier  to debug 

3.What are pre-defined keywords in Python?
.Pre-defined keywords in Python are special reserved words that have a fixed meaning in the language and cannot be used as variable names, function names, or identifiers.

They are part of Python‚Äôs syntax and tell the interpreter how to understand your code.

Examples:

False, None, True, and, as, assert, break, class, continue,
def, del, elif, else, except, finally, for, from, global,
if, import, in, is, lambda, nonlocal, not, or, pass, raise,
return, try, while, with, yield

4.Can keywords be used as variable names?
.No ‚Äî keywords cannot be used as variable names in Python because they are reserved words with special meaning for the interpreter.

5.What is mutability in Python?
.Mutability in Python refers to whether an object‚Äôs content can be changed after it‚Äôs created.

Mutable objects ‚Üí Can be changed in place without creating a new object.
Examples: list, dict, set, bytearray

Immutable objects ‚Üí Cannot be changed; any modification creates a new object.
Examples: int, float, str, tuple, frozenset

6.Why are lists mutable, but tuples are immutable
.Lists are mutable and tuples are immutable because of how Python‚Äôs data structures are designed for different purposes.

7.What is the difference between ‚Äú==‚Äù and ‚Äúis‚Äù operators in Python
.The == and is operators in Python look similar but check different things:

1Ô∏è‚É£ == ‚Üí Equality Operator

Purpose: Compares values of two objects.

Returns True if the data they hold is the same, regardless of whether they are stored in the same place in memory.

a = [1, 2, 3]
b = [1, 2, 3]

print(a == b)  # ‚úÖ True (values are equal)

2Ô∏è‚É£ is ‚Üí Identity Operator

Purpose: Checks if two variables refer to the exact same object in memory.

Returns True only if they have the same memory address.

print(a is b)  # ‚ùå False (different objects in memory)

Example Comparison
x = [1, 2, 3]
y = [1, 2, 3]
z = x

print(x == y)  # True  ‚Üí values are equal
print(x is y)  # False ‚Üí different objects
print(x is z)  # True  ‚Üí same object


üí° In short:

== ‚Üí ‚ÄúDo they look the same?‚Äù (value equality)

is ‚Üí ‚ÄúAre they the same person?‚Äù (identity)

8.What are logical operators in Python?
.Logical operators in Python are used to combine or modify Boolean values (True / `

9.What is type casting in Python?
.Type casting in Python is the process of converting a value from one data type to another.

10.What is the difference between implicit and explicit type casting?
.implicit casting is done automatically by python while explicit casting requires the function like int(), float 

11.What is the purpose of conditional statements in Python?
.The purpose of conditional statements in Python is to let a program make decisions and execute different code blocks based on certain conditions.

They allow your program to respond differently depending on the data or situation.

12.How does the elif statement work
.The elif statement in Python stands for "else if" and is used when you want to check multiple conditions in sequence.

How it works

Python checks the first if condition.

If it‚Äôs True, it runs that block and skips the rest.

If it‚Äôs False, Python checks the elif condition.

If that‚Äôs True, it runs that block and skips the rest.

If none of the if or elif conditions are True, the else block runs

13 What is the difference between for and while loop
.Use for - when you know the number of iterations or are looping over a sequence.

Use while - when you loop until a condition changes.

14.Describe a scenario where a while loop is more suitable than a for loop.
.A while loop is more suitable than a for loop when you don‚Äôt know in advance how many times the loop will need to run, and the stopping condition depends on something that happens during execution rather than a fixed range or sequence.
